module Scoring where

import Daml.Script
import DA.Set as Set
import DA.Action
import DA.List

template Score 
  with 
    assetidCode: Text
    scoreCalculator: Party
    calculatedScore: Decimal
    scoreVoters: Set Party
    alreadyVoted: Set Party

  where 
    signatory  scoreCalculator
    observer scoreVoters

    ensure (intersection scoreVoters alreadyVoted == Set.empty) &&
      (alreadyVoted /= Set.empty || calculatedScore == 0.0)

    choice Score_Vote: ContractId Score
      with 
        scoreVoter: Party
        score: Int

      controller scoreVoter 
      do
        assertMsg "The score must be an integer between 1 & 5" $
          (score>=1 && score<=5)  
        assertMsg "The voter is not on the list of allowed voters" $
          (Set.member scoreVoter scoreVoters)
        create this with
          calculatedScore = (intToDecimal score + calculatedScore * intToDecimal (size alreadyVoted)) 
            / (intToDecimal (size alreadyVoted) + 1.0)
          scoreVoters = Set.delete scoreVoter scoreVoters
          alreadyVoted = Set.insert scoreVoter alreadyVoted